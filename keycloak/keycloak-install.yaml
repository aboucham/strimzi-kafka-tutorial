apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-db
spec:
  serviceName: postgresql-db-service
  selector:
    matchLabels:
      app: postgresql-db
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql-db
    spec:
      containers:
        - name: postgresql-db
          image: postgres:15
          volumeMounts:
            - mountPath: /data
              name: cache-volume
          env:
            - name: POSTGRES_USER
              value: testuser
            - name: POSTGRES_PASSWORD
              value: testpassword
            - name: PGDATA
              value: /data/pgdata
            - name: POSTGRES_DB
              value: keycloak
      volumes:
        - name: cache-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
spec:
  selector:
    app: postgresql-db
  type: LoadBalancer
  ports:
  - port: 5432
    targetPort: 5432
---
# -----------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-db-secret
type: Opaque
data:
  username: dGVzdHVzZXI=
  password: dGVzdHBhc3N3b3Jk
---
# -----------------------------------------------------------------------------
# 2. TLS Secret for Keycloak Route (example-tls-secret)
#    Holds the certificate and private key for the Keycloak HTTPS/TLS connection.
#
#    !!! IMPORTANT: To fix the BadRequest error, the base64 content must be
#    a single, continuous string without any comments, newlines, or extra
#    whitespace. The mock data below is now fixed to be in the correct format.
#    Replace these placeholder strings with your actual base64-encoded
#    certificate (tls.crt) and private key (tls.key) contents.
#
#    How to generate the required Base64 strings:
#    $ base64 -w0 certificate.pem
#    $ base64 -w0 key.pem
# -----------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: example-tls-secret
type: kubernetes.io/tls
data:
  # Placeholder for base64 encoded certificate (tls.crt)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiNNb2NrIENlcnRpZmljYXRlIEJhc2U2NCBFbmNvZGVkCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  # Placeholder for base64 encoded private key (tls.key)
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCiNNb2NrIFByaXZhdGUgS2V5IEJhc2U2NCBFbmNvZGVkCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: example-kc
  namespace: keycloak
spec:
  db:
    host: postgres-db
    passwordSecret:
      key: password
      name: keycloak-db-secret
    usernameSecret:
      key: username
      name: keycloak-db-secret
    vendor: postgres
  hostname:
    hostname: keycloak-host.apps.aboucham-ai.emea.aws.cee.support
  http:
    tlsSecret: example-tls-secret
  instances: 1
  proxy:
    headers: xforwarded
